@startuml

User-->Scripts : simple txt file

Scripts : Sequence of instructions
Scripts : for building systems, 
Scripts : automating runs, or 
Scripts : other comptuations for 
Scripts : the core to handle.

User-->Computational_Engine : input file

User-->Interactive : screen input

Interactive : Screen I/O
Interactive : Built from isympy
Interactive : Capable of writing 
Interactive : scripts, input files

Interactive-->User : screen output

Interactive-->Scripts : write to disk?

Scripts-->Computational_Engine

state Computational_Engine {
  [*]-->Input_File : input file from user or interactive

  Input_File : Bertini Classic 
  Input_File : style?

  [*]-->System : possible to bypass input file?

  System : Some system(s) to 
  System : to be used in the 
  System : computations. 

  [*]-->Homotopy : possible to bypass input file?

  Homotopy : Provided by user 
  Homotopy : or created by Bertini

  [*]-->Tracker_and_other_Modules : compiled as library?

  Tracker_and_other_Modules : tracker and other 
  Tracker_and_other_Modules : modules built into 
  Tracker_and_other_Modules : Bertini ("core" or 
  Tracker_and_other_Modules : otherwise) 

  Input_File-->Homotopy : parse

  Input_File-->System : parse

  System-->Homotopy : Bertini creates start

  Homotopy-->Tracker_and_other_Modules

  Tracker_and_other_Modules-->Solutions

  Solutions : Could be various 
  Solutions : forms of output

Solutions-->User : file? memory/interface?

Solutions-->Scripts : file or memory?

Solutions-->Interactive : file? memory/interface?
}


@enduml
