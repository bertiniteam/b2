

@startuml

namespace bertini{
	
	Node <|-- Operator
	Node <|-- Symbol
	Operator <|-- Plus
	Operator <|-- Minus
	Operator <|-- Negate
	Operator <|-- Times
	Operator <|-- Divide
	Operator <|-- Exp
	Operator <|-- Log
	Operator <|-- Sine
	Operator <|-- Cosine
	
	Symbol <|-- Variable
	Symbol <|-- PathPariable
	Symbol <|-- Coefficient
	
	
	Polynomial o-- Node 
	
	class Node {
		
		..
		disallow empty instantiation?  
		this might be acheieved by pure virtualism
		..
            	virtual SetPrecision(int prec)
            	..
            	virtual Evaluate()
            	..
            	virtual String()
            	
            	--
            	
            	-Node()  private so that empty construction prohibited.  
            	this may help protect against errors in parsing
	}
	
	class Operator {
		empty virtual class?
	}
	
	
	class Variable {
		..
		Evaluate() virtual
		return current value
		..
		String() virtual
		return name_
	}
	
	
	class Plus {
		+Plus(Node, Node)
		..
		String()
	}
	
	class Minus {
		+Minus(Node,Node)
		..
	}
	
	class Negate {
		+Negate(Node)
		..
	}
	
	class Times {
		+Times(Node,Node)
		..
	}
	
	
	class Divide {
		+Divide(Node, Node)
	}
	
	class Polynomial {
		*Node  top of the tree
	}
	
	class Symbol {
		empty virtual class
	}
}

@enduml