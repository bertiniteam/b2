


@startuml


title ImplicitTimeFindPath()



start
partition initial_track {
:compute pi(a) and pi(b);

:track using arclength continuation
from t = pi(a) to t = pi(b)
along g(p)=0;
note
	all tracking here done using
	arclength continuation
	because time is implicit
end note

:get to endpoint c \in {\pi^{-1}(\pi(b))};

:add [\pi(a), \pi(b)] as segment in path;
}
if (c == b?) then (yes)
	#green:have path, with
	a single segment,
	no monodromy necessary;
else (no)
partition monodromy {
	:numtries = 0;
	while (numtries < max allowed) is (true)
		:construct monodromy loop

		loop consists of multiple segments,
		which start and end at \pi(c);
		:numwalks = 0;
		while (numwalks < max allowed?) is (true)
			:walk loop once
			numwalks++;
			if (ended at b?) then (yes)
				#green:add current loops to path,
					including the number of times walked;
				stop
			elseif (c?) then (yes)
				#red:empty contents of path,
				 no path exists|
				note
					b not on sheet,
					path theoretically not
					constructible
				end note
				stop
			endif
:not done yet, keep going;
		endwhile (false, max walks exceeded)
	endwhile (false, numtries exhausted)
	#red:give up, empty path;
	stop
}
endif


stop


@enduml



